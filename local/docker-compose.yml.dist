version: '2'

networks:
  auin-network:
    driver: bridge

services:
  project-app-backend-api:
    container_name: ${PROJECT_NAME}-api-${BACKEND_TECH}
    restart: always
    build:
      context:  ../
      dockerfile: ./local/docker/api/files/Dockerfile
    networks:
      - auin-network
    depends_on:
      - project-app-transactional-db
    volumes:
      - '../${API_BACKEND_DIR}/:/var/srv/app'
      - '/var/srv/app/node_modules'
    environment:
      - NODE_ENV=development
    ports:
      - "${API_HOST_HTTP_PORT}:3000"

  # app-frontend-web:
  #   container_name: ${PROJECT_NAME}-web-${FRONTEND_TECH}
  #   restart: always
  #   build:
  #     context:  ../
  #     dockerfile: ./local/docker/web-frontend/files/Dockerfile
  #   networks:
  #     - auin-network
  #   volumes:
  #     - '../${WEB_FE_DIR}/:/var/srv/app'
  #     - '/var/srv/app/node_modules'
  #   environment:
  #     - NODE_ENV=development
  #   ports:
  #     - "${WEB_FE_HTTP_PORT}:3000"

  project-app-transactional-db:
    container_name: ${PROJECT_NAME}-db-${RELATIONAL_BD_TECH}
    image: postgres:${POSTGRESQL_VERSION}-alpine
    restart: always
    environment:
      - POSTGRES_DB=${PROJECT_NAME}
      - POSTGRES_USER=${PROJECT_NAME}
      - POSTGRES_PASSWORD=${PROJECT_NAME}
    networks:
      - auin-network
    volumes:
      - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "${PG_HOST_PORT}:5432"

  project-app-redis:
    image: redis:${REDIS_VERSION}-alpine
    container_name: ${PROJECT_NAME}-cache-redis
    restart: always
    hostname: ${PROJECT_NAME}-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - auin-network
    ports:
      - "${REDIS_PORT}:6379"

  project-app-rabbitmq:
    build:        
      context: ../
      dockerfile: ./local/docker/queue/files/Dockerfile
    container_name: ${PROJECT_NAME}-queue-rabbitmq
    restart: always
    hostname: ${HOST_NAME}
    ports:
      - "${MAIN_PORT}:5672"
      - "${WEB_MANAGEMENT_PORT}:15672"
    volumes:      
      - ./${CONFIG_MAIN_DIR}:/etc/rabbitmq:rw
      - ./${CONFIG_MAIN_DIR}/data:/var/lib/rabbitmq
    networks:
      - auin-network
